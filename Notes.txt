$$$1. spread operator syntax example: <Todo key={todo.id} {...todo}/> (in the TodoList.js file)

$$$2. Why use Array.map() rather than Array.forEach()?
Array.forEach doesn't do anything with the returned value inside the callback.
forEach itself always returns undefined, not an array.
On the other hand, Array.map() turns all the returned values into a new array which is exactly what we want!
Maps return value is the array of new values.

From the docs for forEach:
"forEach() executes the callback function once for each array element;
unlike map() or reduce() it always returns the value undefined and is not chainable.
The typical use case is to execute side effects at the end of a chain."

$$$3. Arrow functions only implicitly return when using the expression syntax with no curly braces.
The statements syntax with curly braces does require an explicit return statements.

To see an example - https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions

$$$4. Question: why can't we just have this.handleSubmit on the button onClick event instead of having a form and then onSubmit?
Answer: Form tags are still an important thing to use, we're just switching up how we use it.
onClick limits how the user can submit the form.
People using the keyboard and clicking the enter key to submit the form will not able to.
They'll have to click the button.

Using the form tag with onSubmit opens up a wider range of options and accessibility enhancements.
I would not reccomend creating a form without a form tag.
It's use has evolved with the modern web.

$$$5. In test.js file, should we use ref or ReactDOM.findDOMNode()?
From Andrew:
We previously used "var form = ReactDOM.findDOMNode(...)" to target the form and simulate a submit action.
We don't need to do that here since we have refs defined on our input fields.
The refs point directly to the DOM nodes we want to simulate events on.
That means ReactDOM.findDOMNode(...) is not necessary.

I use jQuery in the tests to allow for more flexible querying of the components DOM.
You can 100% remove jQuery and use refs,
I just found it annoying to create all these refs that were only going to be used by my test file.
